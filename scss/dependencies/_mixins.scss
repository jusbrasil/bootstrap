@charset "UTF-8";

/**
 * This file gathers general rules. Works like a reset, but setting the default
 * behavior of the site.
 */

@mixin link-color($color, $hoverColor, $activeColor) {
  color: $color;

  &:hover { color: $hoverColor; }
  &:active { color: $activeColor; }
}

@mixin generic-horizontal-center {
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
}

@mixin vertical-center {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}

@mixin horizontal-center {
  position: absolute;
  @include generic-horizontal-center;
}

@function pt-to-rem($pt) {
  @return ($pt * 0.133) * 1rem;
}

@mixin box-inner-shadow($color) {
  box-shadow: inset 0 1px 3px -1px $color;
}

@mixin box-shadow-level-1($color){
  box-shadow: 0 1px 2px 0 rgba($color,.24),
              0 2px 2px 0 rgba($color,.12);
}

/**
 * Solution to hidden elements readable by screen reader:
 * http://a11yproject.com/posts/how-to-hide-content/
 */

@mixin hidden-element {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  padding: 0;
  border: 0;
}

@mixin transform($transform) {
  -webkit-transform: $transform;
      -ms-transform: $transform;
          transform: $transform;
}

@mixin transition-transform($transition) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition:    -moz-transform $transition;
          transition:         transform $transition;
}


@mixin keyframes($name) {
  @-webkit-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

/**
* 1 - Define class name, eg `steps--count3`;
* 2 - Except first child, all steps must be margin-left relative to wrapper and
      quantity of node steps;
* 3 - Define line after each step, except to the last child.
*/

@mixin steps($stepWidth, $count) {
  $linesCount: $count - 1;
  .#{'steps--count' + $count} { /* 1 */
    .step {
      margin-left: calc(((100% - #{$stepWidth * $count}) / #{$linesCount})); /* 2 */
      &:first-child { margin-left: 0; }
      &:last-child:after { width: 0; }
      &:after {
        width: calc(((100% - #{$stepWidth * $count}) / #{$linesCount}) + (#{$grid * 3})); /* 3 */
      }
    }
  }
}
