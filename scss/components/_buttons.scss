@charset "UTF-8";

/*——————————————————*\
  #BUTTON PLACEHOLDERS
\*——————————————————*/

%button--big {
  $height: $grid*6;
  height: $height;
  line-height: $height;
  font-size: 16px;
  padding: 0 20px;

  .fa { margin-right: $grid; }
  &.button--iconRight {
    .fa {
      margin: 0 0 0 $grid;
      float: right;
    }
  }
}





/*----------------------------------------------------------------------------*\
  #BUTTON

  .button (--medium|--small|--caps|--block) (--iconRight) (--blue|--green|--yellow|--orange|--red)
    (i.fa)

\*----------------------------------------------------------------------------*/

/**
 * 1 - Defines the default background color and overwrites the hover/active
 *     style when disabled.
 * 2 - Extends the default size: button--big.
 * 3 - Necessary when used in block elements.
 * 4 - Defines the default button color to gray.
 */

@mixin button-background($defaultColor, $hoverColor, $activeColor) {
  &:hover { background: $hoverColor; }
  &:active { background: $activeColor; }
  &, &[disabled] { background: $defaultColor; } /* 1 */
}

.button {
  @extend %sexyBox;
  @extend %button--big; /* 2 */
  display: inline-block; /* 3 */
  text-align: center;
  color: $white;
  @include button-background($black500, $black600, $black700); /* 4 */
}

/* Colors modifiers */
.button--blue   { @include button-background($blue500,    $blue600,   $blue700); }
.button--green  { @include button-background($green500,   $green600,  $green700); }
.button--yellow { @include button-background($yellow500,  $yellow600, $yellow700); }
.button--orange { @include button-background($orange500,  $orange600, $orange700); }
.button--red    { @include button-background($red500,     $red600,    $red700); }

/* Size and style modifiers */
.button--medium {
  $height: $grid*5;
  height: $height;
  line-height: $height;
  font-size: 14px;
  padding: 0 $grid*2;
  .fa { margin-right: 6px; }
}

.button--small  {
  $height: $grid*4;
  height: $height;
  line-height: $height;
  font-size: 12px;
  padding: 0 $grid+$grid/2;
  .fa { margin-right: $grid/2; }
}

.button--caps   {
  $height: $grid*3;
  height: $height;
  line-height: $height;
  font-size: 10px;
  padding: 0 $grid;
  text-transform: uppercase;
  .fa { margin-right: $grid/2; }
}

.button--block {
  width: 100%;
}





/*----------------------------------------------------------------------------*\
  #ACTIONBUTTON

  .actionButton (--loading|--done) (--iconRight) (--medium|--small|--caps) (--blue|--green|--yellow|--orange|--red)
    (i.fa)

\*----------------------------------------------------------------------------*/

/**
 * 1 - Ellipsis character
 */

.actionButton {
  @extend .button;
  &:before { content: attr(label); }
  .fa { float: left; }
  &.button--iconRight {
    .fa { float: right; }
  }
}

/* Colors modifiers */
.actionButton--blue   { @extend .button--blue; }
.actionButton--green  { @extend .button--green; }
.actionButton--yellow { @extend .button--yellow; }
.actionButton--orange { @extend .button--orange; }
.actionButton--red    { @extend .button--red; }

/* Size and style modifiers */
.actionButton--medium { @extend .button--medium; }
.actionButton--small  { @extend .button--small; }
.actionButton--caps   { @extend .button--caps; }

/* Action modifiers */
.actionButton--loading {
  &:after {
    content: "\2026"; /* 1 */
    overflow: hidden;
    display: inline-block;
    vertical-align: bottom;
    -webkit-animation:  ellipsis 1s infinite;
            animation:  ellipsis 1s infinite;
  }
  &:before { content: attr(label-loading); }
}

.actionButton--done {
  &:after { content: "!"; }
  &:before { content: attr(label-done); }
}





/*----------------------------------------------------------------------------*\
  #OUTLINEBUTTON

  .outlineButton (--light)
    (i.fa)

\*----------------------------------------------------------------------------*/

@mixin outline-button($color, $hoverColor) {
  border: 1px solid $color;
  color: $color;
  &:hover {
    &:not([disabled]) {
      color: $hoverColor;
      border-color: currentColor;
    }
  }
}

.outlineButton {
  @extend %roundedBox;
  @extend %button--big;
  @include outline-button($black87, $black);
}

.outlineButton--light {
  @include outline-button($white87, $white);
}

.outlineButton--blue   { @include outline-button($blue, $blue600); }
.outlineButton--green  { @include outline-button($green, $green600); }
.outlineButton--yellow { @include outline-button($yellow, $yellow600); }
.outlineButton--orange { @include outline-button($orange, $orange600); }
.outlineButton--red    { @include outline-button($red, $red600); }






/*----------------------------------------------------------------------------*\
  #FLATBUTTON

  .flatButton (--blue|--green|--yellow|--orange|--red)
    (i.fa)

\*----------------------------------------------------------------------------*/

/**
 * 1 - Defines the default background color and overwrites the hover/active
 *     style when disabled.
 * 2 - Extends the default size: button--medium.
 */

 @mixin flatButton-color($defaultColor, $hoverColor, $activeColor) {
  &:hover { color: $hoverColor; }
  &:active { color: $activeColor; }
  &, &[disabled] { color: $defaultColor; } /* 1 */
}

.flatButton {
  @extend .button--medium; /* 2 */
  @include flatButton-color($black500, $black600, $black700);
  text-transform: uppercase;
}

.flatButton--blue   { @include flatButton-color($blue500,   $blue600,   $blue700); }
.flatButton--green  { @include flatButton-color($green500,  $green600,  $green700); }
.flatButton--yellow { @include flatButton-color($yellow500, $yellow600, $yellow700); }
.flatButton--orange { @include flatButton-color($orange500, $orange600, $orange700); }
.flatButton--red    { @include flatButton-color($red500,    $red600,    $red700); }
